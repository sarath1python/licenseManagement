{"remainingRequest":"/home/sarath/Documents/sarath/qb/projects/pradhidwani/license-management/vue_soundLicence/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sarath/Documents/sarath/qb/projects/pradhidwani/license-management/vue_soundLicence/src/views/Login/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sarath/Documents/sarath/qb/projects/pradhidwani/license-management/vue_soundLicence/src/views/Login/Login.vue","mtime":1549822050661},{"path":"/home/sarath/Documents/sarath/qb/projects/pradhidwani/license-management/vue_soundLicence/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sarath/Documents/sarath/qb/projects/pradhidwani/license-management/vue_soundLicence/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sarath/Documents/sarath/qb/projects/pradhidwani/license-management/vue_soundLicence/node_modules/vuetify-loader/lib/loader.js","mtime":1548745995000},{"path":"/home/sarath/Documents/sarath/qb/projects/pradhidwani/license-management/vue_soundLicence/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sarath/Documents/sarath/qb/projects/pradhidwani/license-management/vue_soundLicence/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data: () => ({\n    valid: true,\n    username:\"\",\n    password:\"\",\n    usernameRules: [\n      v => !!v || 'Username is required',\n    ],\n    passwordRules: [\n      v => !!v || 'Password is required',\n    ]\n  }),\n  methods: {\n    validateAndLogin () {\n        if(this.username != \"\" && this.password != \"\") {\n            if(this.username == this.$store.state.sampleUserData.name && this.password == this.$store.state.sampleUserData.password)\n              {   \n                  console.log('skldfjskfdj')\n                   Promise.all([\n                      this.store.dispatch('loggIn'),\n                  ]).then(() => {\n                  });\n              }\n            this.$router.replace({ name: \"dashboard\" });\n          }\n        else {}\n    }\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/Login","sourcesContent":["<template>\n    <v-container>\n    <v-layout align-center justify-center>\n        <v-form\n    ref=\"form\"\n    v-model=\"valid\"\n    lazy-validation\n  >\n    <v-text-field\n      v-model=\"username\"\n      :rules=\"usernameRules\"\n      label=\"Username\"\n      required\n    ></v-text-field>\n\n    <v-text-field\n      v-model=\"password\"\n      :rules=\"passwordRules\"\n      label=\"Password\"\n      type=\"password\"\n      required\n    ></v-text-field>\n      </v-form>\n    </v-layout>\n    <v-layout align-center justify-center>\n            <v-flex xs6>\n                <div class=\"text-xs-center\">\n                    <v-btn\n                        absolute-center\n                        color=\"success\"\n                        dark\n                        @click=\"validateAndLogin\"\n                    >\n                    Login\n                    </v-btn>\n                </div>\n            </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n\n<script>\n  export default {\n    data: () => ({\n      valid: true,\n      username:\"\",\n      password:\"\",\n      usernameRules: [\n        v => !!v || 'Username is required',\n      ],\n      passwordRules: [\n        v => !!v || 'Password is required',\n      ]\n    }),\n    methods: {\n      validateAndLogin () {\n          if(this.username != \"\" && this.password != \"\") {\n              if(this.username == this.$store.state.sampleUserData.name && this.password == this.$store.state.sampleUserData.password)\n                {   \n                    console.log('skldfjskfdj')\n                     Promise.all([\n                        this.store.dispatch('loggIn'),\n                    ]).then(() => {\n                    });\n                }\n              this.$router.replace({ name: \"dashboard\" });\n            }\n          else {}\n      }\n    }\n  }\n</script>"]}]}