{"version":3,"sources":["../../../../src/components/VSparkline/helpers/core.ts"],"names":[],"mappings":";;;;;QAEgB,S,GAAA,S;;;;AAAV,SAAU,SAAV,CAAqB,MAArB,EAA8C,QAA9C,EAAgE;AAAA,QAC5D,IAD4D,GACjC,QADiC,CAC5D,IAD4D;AAAA,QACtD,IADsD,GACjC,QADiC,CACtD,IADsD;AAAA,QAChD,IADgD,GACjC,QADiC,CAChD,IADgD;AAAA,QAC1C,IAD0C,GACjC,QADiC,CAC1C,IAD0C;;AAEpE,QAAM,mBAAmB,OAAO,GAAP,CAAW;AAAA,eAAS,OAAO,IAAP,KAAgB,QAAhB,GAA2B,IAA3B,GAAkC,KAAK,KAAhD;AAAA,KAAX,CAAzB;AACA,QAAM,WAAW,KAAK,GAAL,gCAAY,gBAAZ,KAAgC,CAAjD;AACA,QAAI,WAAW,KAAK,GAAL,gCAAY,gBAAZ,EAAf;AAEA,QAAI,QAAJ,EAAc,YAAY,CAAZ;AAEd,QAAM,QAAQ,CAAC,OAAO,IAAR,KAAiB,iBAAiB,MAAjB,GAA0B,CAA3C,CAAd;AACA,QAAM,QAAQ,CAAC,OAAO,IAAR,KAAiB,WAAW,QAA5B,CAAd;AAEA,WAAO,iBAAiB,GAAjB,CAAqB,UAAC,KAAD,EAAQ,KAAR,EAAiB;AAC3C,eAAO;AACL,eAAG,QAAQ,KAAR,GAAgB,IADd;AAEL,eACE,OACA,CAAC,QAAQ,QAAT,IAAqB,KADrB,GAEA,EAAE,UAAU,iBAAiB,MAAjB,GAA0B,CAAtC,IAA2C,OAF3C,GAGA,EAAE,UAAU,CAAZ,IAAiB,OANd;AAOL;AAPK,SAAP;AASD,KAVM,CAAP;AAWD","sourcesContent":["import { SparklineItem, Boundary, Point } from '../VSparkline'\n\nexport function genPoints (points: SparklineItem[], boundary: Boundary): Point[] {\n  const { minX, minY, maxX, maxY } = boundary\n  const normalisedPoints = points.map(item => (typeof item === 'number' ? item : item.value))\n  const maxValue = Math.max(...normalisedPoints) + 1\n  let minValue = Math.min(...normalisedPoints)\n\n  if (minValue) minValue -= 1\n\n  const gridX = (maxX - minX) / (normalisedPoints.length - 1)\n  const gridY = (maxY - minY) / (maxValue - minValue)\n\n  return normalisedPoints.map((value, index) => {\n    return {\n      x: index * gridX + minX,\n      y:\n        maxY -\n        (value - minValue) * gridY +\n        +(index === normalisedPoints.length - 1) * 0.00001 -\n        +(index === 0) * 0.00001,\n      value\n    }\n  })\n}\n"],"sourceRoot":""}